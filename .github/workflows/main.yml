name: Build and test Qbs

on: [push]

jobs:
  build-linux:
    name: Build Qbs with Qbs on Linux
    runs-on: ubuntu-latest
    env:
      BUILD_OPTIONS: "modules.cpp.compilerWrapper:ccache modules.qbs.debugInformation:true modules.qbsbuildconfig.enableAddressSanitizer:false modules.qbsbuildconfig.enableBundledQt:true"
      QTEST_FUNCTION_TIMEOUT: 9000000
      WITH_TESTS: 0
    steps:
    - uses: actions/checkout@v1
    - name: Create .ccache dir
      run: mkdir -p ~/.ccache
    - name: ccache cache files
      uses: actions/cache@v2
      with:
        path: ~/.ccache
        key: ${{ runner.os }}-ccache
    - name: Pull the Bionic Image
      run: docker-compose pull bionic
    - name: Print ccache stats
      run: docker-compose run bionic ccache -s
      # cache the docker image
#    - uses: satackey/action-docker-layer-caching@v0.0.8
    - name: Build Qbs
      run: docker-compose run bionic scripts/build-qbs-with-qbs.sh
    - name: Print ccache stats
      run: docker-compose run bionic ccache -s
    - name: Create acrhive
      run: tar -C release/install-root/ -cJf qbs-${{ github.run_id }}.tar.xz usr/local
    - name: Upload artifacts
      uses: 'actions/upload-artifact@v2'
      with:
        name: qbs-${{ github.run_id }}.tar.xz
        path: qbs-${{ github.run_id }}.tar.xz

  test-linux:
    name: Run Tests
    runs-on: ubuntu-latest
    needs: build-linux
    env:
      QBS_TEST_SOURCE_ROOT: "tests"
      QBS_AUTOTEST_PROFILE: "qt-gcc_64"
    steps:
    - uses: actions/checkout@v1
    - name: Download artifact
      uses: actions/download-artifact@v1
      with:
        name: qbs-${{ github.run_id }}.tar.xz
        path: ./
    - name: Unpack artifact
      run: mkdir -p release/install-root/ && tar xf qbs-${{ github.run_id }}.tar.xz -C release/install-root/
    - name: Pull the Bionic Image
      run: docker-compose pull bionic
    - name: Run tests
      run: docker-compose run bionic ./scripts/test-qbs.sh ./release/install-root/usr/local/bin


  test-baremetal:
    name: Run Baremetal tests
    runs-on: ubuntu-latest
    needs: build-linux
    env:
      QBS_TEST_SOURCE_ROOT: "tests"
    steps:
    - uses: actions/checkout@v1
    - name: Download artifact
      uses: actions/download-artifact@v1
      with:
        name: qbs-${{ github.run_id }}.tar.xz
        path: ./
    - name: Unpack artifact
      run: mkdir -p release/install-root/ && tar xf qbs-${{ github.run_id }}.tar.xz -C release/install-root/
    - name: Pull the Focal-Baremetal Image
      run: docker-compose pull focal-baremetal
    - name: arm-none-eabi-gcc-9_2
      run: QBS_AUTOTEST_PROFILE=arm-none-eabi-gcc-9_2 docker-compose run focal-baremetal scripts/test-baremetal.sh release/install-root/usr/local/bin
    - name: avr-gcc-5_4
      run: QBS_AUTOTEST_PROFILE=avr-gcc-5_4 docker-compose run focal-baremetal scripts/test-baremetal.sh release/install-root/usr/local/bin
    - name: msp430-gcc-4_6
      run: QBS_AUTOTEST_PROFILE=msp430-gcc-4_6 docker-compose run focal-baremetal scripts/test-baremetal.sh release/install-root/usr/local/bin
    - name: sdcc-3_8_0-mcs51
      run: QBS_AUTOTEST_PROFILE=sdcc-3_8_0-mcs51 docker-compose run focal-baremetal scripts/test-baremetal.sh release/install-root/usr/local/bin
    - name: sdcc-3_8_0-stm8
      run: QBS_AUTOTEST_PROFILE=sdcc-3_8_0-stm8 docker-compose run focal-baremetal scripts/test-baremetal.sh release/install-root/usr/local/bin

  build-macos:
    name: Build Qbs with Qbs on macOS
    runs-on: macos-latest
    env:
      BUILD_OPTIONS: "modules.cpp.compilerWrapper:ccache modules.qbs.debugInformation:true modules.qbsbuildconfig.enableAddressSanitizer:false modules.qbsbuildconfig.enableBundledQt:true"
      QTEST_FUNCTION_TIMEOUT: 9000000
      WITH_TESTS: 0
      QT_INSTALL_DIR: "$HOME/Qt"
      QMAKE_PATH: "$HOME/Qt/5.15.0/clang_64/bin/qmake"
      QT_VERSION: "5.15.0"
      QTCREATOR_VERSION: "4.12.4"

    steps:
    - uses: actions/checkout@v1
    - name: Create .ccache dir
      run: mkdir -p ~/.ccache
    - name: ccache cache files
      uses: actions/cache@v2
      with:
        path: ~/.ccache
        key: ${{ runner.os }}-ccache
    - name: Install required packages
      run: brew install capnp ccache grpc icoutils makensis protobuf python3 p7zip
    - name: Install Qt
      run: |  
        ./scripts/install-qt.sh -d $(eval $QT_INSTALL_DIR) --version ${QT_VERSION} qtbase qtdeclarative qttools qtscript qtscxml
        ./scripts/install-qt.sh -d $(eval $QT_INSTALL_DIR) --version ${QTCREATOR_VERSION} qtcreator
        echo '::add-path::"${{ env.QT_INSTALL_DIR }}/Qt Creator.app/Contents/MacOS"'
    - name: ls
      run: ls -l "$HOME/Qt/Qt Creator.app/Contents/MacOS"
    - name: Print PATH
      run: echo $PATH
    - name: Print ccache stats
      run: ccache -s
    - name: which
      run: which qbs
#    - name: naive test
#      run: hash qbs
    - name: Setup toolchains
      run: qbs setup-toolchains --detect
#    - name: Setup Qt
#      run: bash -c '"$(which qbs)" setup-qt ${QMAKE_PATH} qt'
#    - name: Setup Qt base profile
#      run: bash -c '"$(which qbs)" config profiles.qt.baseProfile xcode-macosx-x86_64'
#    - name: Print profiles
#      run: bash -c '"$(which qbs)" config --list profiles'
#    - name: Build Qbs
#      run: scripts/build-qbs-with-qbs.sh
